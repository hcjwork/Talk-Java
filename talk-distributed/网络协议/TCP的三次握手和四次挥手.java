TCP建立连接时的三次握手
1、第一次握手
客户端向服务端发送数据包，数据包中SYN=1，还包含随机生成的初始序列号seq=x，表示准备建立TCP连接。
2、第二次握手
服务端接收到客户端的连接建立意向，准备新的数据包回发给客户端，新数据包中SYN=1, ACK=1，确认号ack=x+1，
并发送自己的初始序列号seq=y，表示同意建立TCP连接。
3、第三次握手
客户端接接收到服务端回发的数据包，直到服务端已同意建立连接，于是再发一个新数据包表示已经知晓服务端的意向，
可以正式建立连接了。新数据包中ACK=1，确认号ack=y+1，seq=x+1。

在历经三次握手的交互没有问题后，客户端和服务端就会正式建立连接，双方进入ESTABLISHED（连接建立）状态。
为确认握手的对象没有弄错，客户端和服务端进行数据包交流时，除了要包含自己生产的初始序列号，还要在确认回合
中在对方所发序列号的基础上进行递增，这样双方解析数据包后与自己的原始序列号进行比对，能避免连接到非预期对象。

通过seq+ack再结合连接的动作，区分是连接建立还是终止，同时确认对方是否是自己预期要进行网络交互的对象。

TCP断开连接时四次挥手
1、第一次挥手
客户端向服务端发送数据包，数据包里包含FIN=1、seq=u，FIN表示终止TCP连接，seq是客户端随机生成的初始序列号。
2、第二次挥手
服务端接收到客户端的断开连接的请求，回发新的数据包给客户端，新数据包里ACK=1、ack=u+1，ACK表示同意断开连接，
ack是确认号，在客户端所发的初始序列号基础上递增1。
3、第三次挥手
服务端准备最后的数据包发送给客户端，这个数据包里FIN=1、seq=v，还可能包含还没来得及传输的最后一份数据，
FIN表示终止连接，seq是服务端随机生成的初始序列号。表示已经准备好断开连接了。
4、第四次挥手
客户端收到服务端回发的最终数据包，最后再发一个确认准备好断开连接的数据包给服务端，数据包里ACK=1、ack=v+1，
ACK表示已确认知晓，ack是确认号，在服务端所发的初始序列号基础上递增1。客户端进入TIME_WAIT状态，倒计时2ms后关闭。

在接收到第四次挥手时客户端所传数据包没有问题后，服务端立即关闭TCP连接。
客户端之所以要倒计时关闭，一是为了确保最后一个ACK能到达服务端，二是让网络中残留的旧数据包失效，避免影响新连接。
