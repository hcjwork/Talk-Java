分布式的基本理论。
1、CAP定理
一个分布式系统无法同时满足CAP中的三个方面。
C，Consistency，一致性。一致性指的是数据的强一致性。
A，Availability，可用性。可用性指的是能正常提供服务。
P，Partition Tolerance，分区容忍性。分区容忍性指的是接受网络的延迟、波动等问题。
服务的副本分布在不同的网络分区上，不可避免地要面临网络交互的普遍问题如延迟、波动、故障等。

分区容忍性是分布式系统天然要具备的属性，即便是将多个服务部署在同一台机器上，也必须要使用不同的端口。
所以可以说对于每个服务，都是不同的网络连接，即不同的四元组（源ip、源port、目的ip、目的port）。

而强一致性和可用性互斥，要保证强一致性就无法保证可用性，要保证可用性就无法保证强一致性。
比如转账失败了，为了让转账双方账户的余额符合预期，就必须要抛出异常，终止这次服务请求。

强一致性意味数据变化要即时生效，用户访问到的数据都要求处于最新状态，这就必然要损失一定的可用性，
因为在数据更新完成之前不能对外提供服务，否则就有可能让用户访问到旧数据。
弱一致性或说最终一致性，不要求用户访问到的必定是最新数据，允许用户在一定时间内访问到的是旧数据，
这种策略，是牺牲了部分一致性来保证服务的持续可用。
强一致性和高可用性无法同时保证。

2、BASE理论
在分布式系统中，牺牲强一致性，通过柔性状态可实现高可用，其实就是实现最终一致性。
BA，Basically Available，基本可用，系统在发生故障不能按预期提供标准服务，但可以提供降级性的兜底服务。
S，Soft State，软状态，也称柔性状态，允许系统的数据存在中间状态，即不要求强一致性，只需保证最终一致性即可。
E，Eventually Consistent，最终一致性，数据经过一定时间后能够达成一致。

在CAP定理中，C和A无法同时保证，而P又是每个分布式系统都需要具备的能力，所以实际落地中只有CP或AP这两种架构。
而BASE理论的核心是通过最终一致性来保证系统的可用性，是AP架构的实践理论。

在实际工程里，要做到强一致性需要增加很多复杂的工作，系统的各方面性能比如延迟、吞吐量就会有所下降，
尤其在现今用户规模如此庞大的情形下，如果不是对一致性要求非常高的特殊业务（比如金融交易），
基本没有系统会愿意牺牲自己的性能，所以AP架构的更为普遍，例如Nacos集群默认便是AP架构的。

平衡是实用和实践的根本，很多情况下无法做到十全十美，必须通过取舍才能达到一种相对满意的状态。
所以为什么说系统设计没有银弹，一切都为需求驱动，根据实际需求分析出业务系统的主要侧重，是需要性能还是需要安全，
如果是需要安全，那么选择强一致性；如果需要性能，就用部分一致性来换取高可用性。

假如有人问某某场景如何设计方案，首先要对业务需求的倾向性定位清楚，
比如电商系统中的秒杀业务，我们首先要考虑的是商品在这个秒杀过程中的数据安全性，不能超卖也不能少卖，
要达到不超卖不少卖，那必须要对扣减库存的做锁定，包括订单与库存的组合操作，保证同一时间只有一个线程操作库存数据。
其次才去考虑如何提升并发能力，因为这种秒杀活动，是属于短时激增的非普遍性场景，需要有一种防御策略，
就像举起一面盾，防止用户激增形成的流量利矛刺穿系统，我想起一句古话“兵来将挡水来土掩”，又想起另一句古话“堵不如疏”，
那么我们至少就有两种方向可以考虑，一是将激增的流量疏散到中间件上去，二是通过缩小入口限制流量在可承受范围内。
最后考虑降低交易延迟，这可能就需要牺牲一部分一致性来换取。

当然详细的方案可能不止要考虑这些东西，但无论何种场景，要先抓住主要问题，再解决次要问题，最后做改进提升。




