索引从不同的角度或层面分析能得到不同的分类，这些不同类型的索引往往都有各自的特性和差异。

1、按物理存储分类
聚簇索引（Clustered Index）： 索引与数据行存储在一起，一张表有且只有一个。
非聚簇索引（Secondary Index）： 索引和数据是分开存储的，需回表查询数据。

聚簇索引又称聚集索引，非聚簇索引又称非聚集索引。聚簇指的是索引与数据聚集在一起，不是指多个索引聚集在一起。
索引与数据行存储在一起，是存储在同一个文件；而分开存储时，一个index文件，一个data文件。

一张表的数据行有唯一的一种物理顺序，这个物理顺序就是聚簇索引的顺序。通常按表的主键进行组织。

2、按字段数量分类
单列索引：只对一个字段建立索引。
多列索引（联合索引、复合索引）：针对多个字段联合建立的索引。

3、按字段特性分类
主键索引（Primary Key Index）：针对主键建立的索引，主键字段必须唯一且非空。
唯一索引（Unique Index）：针对某个值唯一的字段所建立的索引，该字段允许NULL值。
普通索引（Normal Index）：针对普通字段建立的索引，字段不要求唯一性，也不要求非空。
复合索引（Composite Index）：由多个字段联合组成建立的索引。

主键索引是聚簇索引，也就是说主键的值与对应这行的数据是存储在一起的，根据主键能立即定位到对应的数据行。
主键索引也是唯一索引，但唯一索引不一定是主键索引。
普通索引没有唯一性约束，只是用于加速查询。
复合索引也称为联合索引、组合索引，遵循最左前缀原则。

4、按索引层级分类
一级索引：直接指向数据行的索引，与数据存储在一起。
二级索引：与数据分开存储的索引，需通过主键回表查询数据。
三级索引：通常指复合索引或多级结构的索引。

三级索引并非通用术语，不是明确分类。关键是一级索引和二级索引。
一级索引是聚簇索引，唯一且非空；二级索引不存储数据，可创建多个二级索引。
主键索引是一级索引，普通索引、唯一索引都是二级索引。复合索引是三级索引。

5、按数据结构分类
B+树索引：InnoDB的默认索引类型，聚簇索引和非聚簇索引都是基于B+树结构的。适合范围查询，支持排序和分组。
哈希索引：仅支持精确查询，不支持范围查询。精确查询时间复杂度为O(1)。
全文索引：用于文本搜索的索引，支持倒排索引。
空间索引：专用于地理数据的索引。

6、按业务场景分类
覆盖索引：索引包含查询所需的所有字段，可以不用回表。
前缀索引：对长字段（如TEXT）仅索引前N个字符（如INDEX(column(10))），可节省空间。

索引覆盖：即覆盖索引，在查询时只包含索引相关的字段，因为索引的值就是对应字段的值，所以可以不用回表查数据，能提高查询效率。
最左前缀原则：这是针对联合索引的一种原则，即查询的条件包含了联合索引的左边的字段时，右边字段的索引才会生效。例如对于联合索引
idx_name_city_id，name、city、id三个字段组成联合索引，查询条件中如果没有name字段而只有city字段，联合索引不会生效。
而查询条件中包含了name字段但写在city字段后，联合索引也能生效，比如`where city = 'a' and name = 'jack'`。